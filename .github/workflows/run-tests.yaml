name: Run tests

on: [pull_request]

jobs:
  merge-test-win:
    runs-on: windows-latest
    name: Merge tests (Windows)

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Install west and dependencies
      run: |
        pip install -U pip
        pip install -U setuptools
        pip install -U wheel
        pip install -U -r scripts/requirements.txt

    - name: Generate and install zcbor package
      run: |
        python setup.py bdist_wheel
        pip install dist/zcbor-0.4.99-py3-none-any.whl
        pip uninstall -y zcbor
        pip install -e .

    - name: Run python tests
      working-directory: tests/scripts
      run: |
        python3 -m unittest run_tests

  merge-test-1:
    runs-on: ubuntu-latest
    name: Merge tests 1
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Prepare and run tests
      uses: ./.github/actions/prepare_and_run_tests
      with:
        tags: -t unit
        asserts: both

    - name: Run pycodestyle
      run: |
        pycodestyle zcbor/zcbor.py --max-line-length=100 --ignore=W191,E101,W503
        pycodestyle tests/scripts/run_tests.py --max-line-length=100 --ignore=W503,E501,E402
        pycodestyle tests/scripts/release_test.py --max-line-length=100
        pycodestyle zcbor/__init__.py --max-line-length=100
        pycodestyle setup.py --max-line-length=100

  merge-test-2:
    runs-on: ubuntu-latest
    name: Merge tests 2
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: Prepare and run tests
      uses: ./.github/actions/prepare_and_run_tests
      with:
        tags: -t decode
        asserts: without

  merge-test-3:
    runs-on: ubuntu-latest
    name: Merge tests 3
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: Prepare and run tests
      uses: ./.github/actions/prepare_and_run_tests
      with:
        tags: -t decode
        asserts: with

  merge-test-4:
    runs-on: ubuntu-latest
    name: Merge tests 4
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: Prepare and run tests
      uses: ./.github/actions/prepare_and_run_tests
      with:
        tags: -t encode
        asserts: without

  merge-test-5:
    runs-on: ubuntu-latest
    name: Merge tests 5
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: Prepare and run tests
      uses: ./.github/actions/prepare_and_run_tests
      with:
        tags: -t encode
        asserts: with

  merge-test-6:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    name: Merge tests 6 (Python ${{ matrix.python-version }})
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      shell: sh
      run: |
        pip3 install -U pip
        pip3 install -U setuptools
        pip3 install -U -r scripts/requirements.txt

    - name: Install zcbor package
      shell: sh
      run: |
        python3 setup.py install

    - name: Run python tests
      working-directory: tests/scripts
      run: |
        python3 -m unittest run_tests

  release-test-1:
    runs-on: ubuntu-latest
    name: Release tests 1 (Fuzz)
    needs:
    - merge-test-win
    - merge-test-1
    - merge-test-2
    - merge-test-3
    - merge-test-4
    - merge-test-5
    - merge-test-6
    if: "startswith(github.head_ref, 'release/')"
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Prepare zcbor
      uses: ./.github/actions/prepare_and_run_tests

    - name: Run python release tests
      working-directory: tests/scripts
      run: |
        echo -n ${{ github.head_ref }} > HEAD_REF
        python3 -m unittest release_test
        rm HEAD_REF

    - name: Install packages
      run: |
        sudo apt update
        sudo apt install -y gcc-multilib afl++

    - name: Run manifest12 fuzz tests
      working-directory: tests/fuzz
      run: |
        ./test-afl.sh 3200 32 manifest12

    - name: Run pet fuzz tests
      working-directory: tests/fuzz
      run: |
        ./test-afl.sh 400 32 pet

    - name: Upload release files
      uses: actions/upload-artifact@v2
      with:
        name: zcbor-release
        path: dist/*

  release-test-2:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    name: Release tests 2 (Python ${{ matrix.python-version }})
    needs:
    - merge-test-win
    - merge-test-1
    - merge-test-2
    - merge-test-3
    - merge-test-4
    - merge-test-5
    - merge-test-6
    if: "startswith(github.head_ref, 'release/')"
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Prepare and run tests
      uses: ./.github/actions/prepare_and_run_tests
      with:
        tags: ''
        asserts: 'both'
        zcbor_package: 'setup_install'
