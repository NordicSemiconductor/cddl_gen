name: Run tests

on: [pull_request]

env:
  ZEPHYR_SDK_VERSION: 0.15.0

jobs:
  merge-test-win:
    runs-on: windows-latest
    name: Merge tests (Windows)

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Install west and dependencies
      run: |
        pip install -U pip
        pip install -U setuptools
        pip install -U wheel
        pip install -U -r scripts/requirements.txt

    - name: Generate and install zcbor package
      run: |
        python setup.py bdist_wheel
        pip install dist/zcbor-0.5.99-py3-none-any.whl
        pip uninstall -y zcbor
        pip install -e .

    - name: Run python tests
      working-directory: tests/scripts
      run: |
        python3 -m unittest run_tests

  merge-test-1:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ["native_posix", "native_posix_64", "mps2_an521"]
        asserts: ["", "-x VERBOSE=ON -x ASSERTS=ON"]
    name: Merge tests 1 (${{ matrix.platform }}${{ matrix.asserts != '' && ' with asserts' || '' }})
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Install zcbor
      uses: ./.github/actions/install_zcbor

    - name: Prepare and run tests
      uses: ./.github/actions/prepare_and_run_tests
      with:
        twister_arguments: "--platform ${{ matrix.platform }} ${{ matrix.asserts }}"
        zephyr_toolchain: ${{ matrix.platform == 'mps2_an521' && 'zephyr' || 'host'}}
        zephyr_toolchain_arch: ${{ matrix.platform == 'mps2_an521' && 'arm' || ''}}

  merge-test-2:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    name: Merge tests 2 (Python ${{ matrix.python-version }})
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install zcbor
      uses: ./.github/actions/install_zcbor
      with:
        zcbor_package: 'setup_install'

    - name: Run python tests
      working-directory: tests/scripts
      run: |
        python3 -m unittest run_tests

  release-test-1:
    runs-on: ubuntu-latest
    name: Release tests 1 (Fuzz)
    needs:
    - merge-test-win
    - merge-test-1
    - merge-test-2
    if: "startswith(github.head_ref, 'release/')"
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Install zcbor
      uses: ./.github/actions/install_zcbor

    - name: Run python release tests
      working-directory: tests/scripts
      run: |
        echo -n ${{ github.head_ref }} > HEAD_REF
        python3 -m unittest release_test
        rm HEAD_REF

    - name: Install packages
      run: |
        sudo apt update
        sudo apt install -y afl++

    - name: Run manifest12 fuzz tests
      working-directory: tests/fuzz
      run: |
        ./test-afl.sh 3200 64 manifest12

    - name: Run pet fuzz tests
      working-directory: tests/fuzz
      run: |
        ./test-afl.sh 400 64 pet

    - name: Upload release files
      uses: actions/upload-artifact@v2
      with:
        name: zcbor-release
        path: dist/*

  release-test-2:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
        asserts: ["", "-x VERBOSE=ON -x ASSERTS=ON"]
    name: Release tests 2 (Python ${{ matrix.python-version }}${{ matrix.asserts != '' && ' with asserts' || '' }})
    needs:
    - merge-test-win
    - merge-test-1
    - merge-test-2
    if: "startswith(github.head_ref, 'release/')"
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install zcbor
      uses: ./.github/actions/install_zcbor
      with:
        zcbor_package: 'setup_install'

    - name: Prepare and run tests
      uses: ./.github/actions/prepare_and_run_tests
      with:
        twister_arguments: "--platform native_posix --platform native_posix_64 --platform mps2_an521 --platform qemu_malta_be ${{ matrix.asserts }}"
        zephyr_toolchain: zephyr
        zephyr_toolchain_arch: arm,mips
